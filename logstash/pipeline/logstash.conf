input
{
    beats {
        port => 5044
    }
}
filter
{
    if "ts_logs" in [tags] {
        grok {
            match => { "message" => "\[%{TIMESTAMP_ISO8601:req_date}\].+\[(?<req_code>REQ-[^\|]+)\|(?<inst_id>[^\]]+)\]%{GREEDYDATA:req_body}" }
        }

        json {
            source => "req_body"
            target => "request"
            remove_field => ["req_body"]
        }

        if "_grokparsefailure" in [tags] {
            drop { }
        }

	date {
	    match => ["req_date", "yyyy-MM-dd HH:mm:ss"]
	    timezone => "UTC"
            locale => "ko"
	}

        mutate
        {
            remove_field => [ "message" ]
        }

    }
    else if "web_logs" in [tags] {
        grok {
            match => { "message" => "\[%{TIMESTAMP_ISO8601:req_date}\] \[.+\] \[.+\] \w+ \w+ \[MOASENDLOG\]\s*:\s*%{GREEDYDATA:req_body}" }
        }
        json {
            source => "req_body"
            target => "request"
            remove_field => ["req_body"]
        }

        if "_grokparsefailure" in [tags] {
            drop { }
        }

        date {
            match => ["req_date", "yyyy-MM-dd HH:mm:ss"]
            timezone => "UTC"
            locale => "ko"
        }

        mutate
        {
            remove_field => [ "message" ]
        }
    }
    else if "web_logs_res" in [tags] {
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:req_date} - \[WRES\]:%{GREEDYDATA:data}" }
        }
        json {
            source => "data"
            target => "result"
            remove_field => ["data"]
        }

        if "_grokparsefailure" in [tags] {
            drop { }
        }
  
        date {
            match => ["req_date", "yyyy-MM-dd HH:mm:ss"]
            timezone => "UTC"
            locale => "ko"
        }

        mutate
        {
            remove_field => [ "message" ]
        }
    }
    else if "count_success_logs" in [tags] {
	grok {
	    match => { "message" => "\[(?<req_date>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\] \[.+\] \[.+\] \w+ [a-zA-Z]+[$]+[a-zA-Z]+[$]+[0-9] \[SUCCESS\]%{GREEDYDATA:req_body}" }
        }
        json {
            source => "req_body"
            target => "request"
            remove_field => ["req_body"]
        }
        if "_grokparsefailure" in [tags] {
            drop { }
        }
        date {
            match => ["req_date", "yyyy-MM-dd HH:mm:ss"]
            timezone => "UTC"
            locale => "ko"
        }
        mutate
        {
            remove_field => [ "message" ]
        }
    }
    else if "ts_exceptions" in [tags] {
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:excetpion_date} - \[(?<inst_id>[a-zA-Z0-9]+)\].+:\s*(?<exception_class>.*Exception)\s*:\s*%{GREEDYDATA:exception_msg}" }
        }

        if "_grokparsefailure" in [tags] {
            drop { }
        }

        date {
            match => ["excetpion_date", "yyyy-MM-dd HH:mm:ss"]
            timezone => "UTC"
            locale => "ko"
        }

        mutate
        {
            remove_field => [ "message" ]
        }
    }
}
output
{
    if "ts_logs" in [tags] {
        elasticsearch {
            index => "ts_logs_test"
            hosts => "es01:9200"
            ecs_compatibility => disabled
        }
    }
    else if "web_logs" in [tags] {
        elasticsearch {
            index => "web_logs"
            hosts => "es01:9200"
            ecs_compatibility => disabled
        }
    }
    else if "web_logs_res" in [tags] {
        elasticsearch {
            index => "web_logs_res"
            hosts => "es01:9200"
            ecs_compatibility => disabled
        }
    }
    else if "count_success_logs" in [tags] {
        elasticsearch {
            index => "ts_success_logs"
            hosts => "es01:9200"
            ecs_compatibility => disabled
        }
    }
    else if "ts_exceptions" in [tags] {
        elasticsearch {
            index => "exception_logs"
            hosts => "es01:9200"
            ecs_compatibility => disabled
        }
    }
}

